apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "kdiff-snapshots.fullname" . }}
  labels:
    {{- include "kdiff-snapshots.labels" . | nindent 4 }}
spec:
  {{- if .Values.cronjob.timeZone }}
  timeZone: {{ .Values.cronjob.timeZone }}
  {{- end }}
  schedule: {{ .Values.cronjob.schedule | required ".cronjob.schedule is required" | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 2
  startingDeadlineSeconds: 90
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "kdiff-snapshots.selectorLabels" . | nindent 12 }}
        spec:
          {{- if .Values.hostNetwork }}
          hostNetwork: {{ .Values.hostNetwork }}
          {{- end }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          automountServiceAccountToken: true
          serviceAccountName: {{ include "kdiff-snapshots.serviceAccountName" . }}
          {{- with .Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: {{ include "kdiff-snapshots.fullname" . }}
              envFrom:
              - configMapRef:
                  name: {{ include "kdiff-snapshots.fullname" . }}-cm-env-vars
              - secretRef:
                  name: {{ include "kdiff-snapshots.fullname" . }}-steampipe-creds
              {{- if .Values.secretEnvVars }}
              - secretRef:
                  name: {{ include "kdiff-snapshots.fullname" . }}-secret-env-vars
              {{- end }}
              {{- if or ((.Values.serviceAccount).awsIrsa).enabled .Values.envVarSecretReferences}}
              env:
                {{- if .Values.envVarSecretReferences }}
                {{- toYaml .Values.envVarSecretReferences | nindent 16 }}
                {{- end }}
                {{- if ((.Values.serviceAccount).awsIrsa).enabled }}
                - name: AWS_DEFAULT_REGION
                  value: {{ .Values.serviceAccount.awsIrsa.region | quote }}
                - name: AWS_ROLE_ARN
                  value: {{ .Values.serviceAccount.awsIrsa.roleArn | quote }}
                {{- end }}
              {{- end }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              {{- if .Values.sleep }}
              command: ["sleep", "infinity"]
              {{- else if .Values.customCommand }}
              command: 
                {{- toYaml .Values.customCommand | nindent 16 }}
              {{- end }}
              ports:
                - name: postgres
                  containerPort: {{ .Values.containerPort }}
                  protocol: TCP
              {{- if .Values.resources }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              {{- else }}
              resources: {}
              {{- end }}
              {{- include "kdiff-snapshots.containerVolumeMounts" . | indent 14}}
          {{- include "kdiff-snapshots.containerVolumes" . | indent 10}}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure