# overrides command to sleep inifinity if debug is true
debug: false

global:
  # steampipeDatabasePassword will be used to set the Steampipe DB password
  # and powerpipe DB Connection URL will get this value from here 
  steampipeDatabasePassword: "Kj8mP2vN9xQ7tR5wL3cY1hB4nM6sD0pF"

# CronJob configuration
# https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
timeZone: 'Asia/Istanbul'  # optional -- https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
schedule: "00 20 * * *"    # https://crontab.guru/#00_20_*_*_*

steampipe:
  # Additional Secret Env Vars for steampipe
  secretEnvVars: {}

  # Define non-secret Env Vars for steampipe
  envVars:
    # INSTALL_PLUGINS will install steampipe plugins at runtime.
    #   Note: INSTALL_PLUGINS env. var. should be space separated
    # Take look at available plugins: https://hub.steampipe.io/
    # INSTALL_PLUGINS: "steampipe kubernetes aws"

    # following yaml syntax (>) will merge newlines with spaces
    INSTALL_PLUGINS: >
      kubernetes
    
    # set the default aws profile if you are passing aws credentials, or use .spc files
    # AWS_PROFILE: "default" 

  # secretCredentials will create Secret and
  # will put the file content to  '~/{directory}/{filename}'
  # useful for passing aws, gcp, kubeconfig credentials
  secretCredentials: {}
    # - name: kubeconfig  
    #   directory: ".kube"
    #   filename: "config"
    #   content: |
    #     example kubeconfig

  # .config is used to create a ConfigMap
  # and will be mounted to ~/.steampipe/config/{key} â€” the filename being the key  
  # use it to configure steampipe: https://steampipe.io/docs/reference/config-files/overview
  config: {}
    # kubernetes.spc: |
    #   connection "kubernetes" {
    #     plugin         = "kubernetes"
    #     config_path    = "~/.kube/config"
    #     config_context = "myCluster"
    #     source_types   = ["deployed"]
    #   }

  initDbSqlScripts: {}

  containerPort: 9193

  image:
    repository: ghcr.io/oguzhan-yilmaz/kdiff-snapshots
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.

  imagePullSecrets: []
  nameOverride: "kdiff-snapshots"
  fullnameOverride: "kdiff-snapshots"

  podAnnotations: {}

  podSecurityContext:    
    fsGroup: 11234

  securityContext:
    runAsUser: 11234
    runAsGroup: 11234
    runAsNonRoot: true

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


  serviceAccount:
    create: true
    annotations: {}
    # If you want to use an existing service account, set create to false and specify the name
    # create: false
    # name: "existing-service-account"

# Additional configuration for the cronjob
secretEnvVars:
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_DEFAULT_REGION: "eu-west-1"
  # AWS_ENDPOINT_URL_S3: 'https://s3.amazonaws.com'
  S3_BUCKET_NAME: ""
  S3_UPLOAD_PREFIX: "my-kdiff-snapshots/dev/"

envVarSecretReferences: []
#  - name: KDIFF_ADMIN_PASSWORD
#  # remove the .secretEnvVars.KDIFF_ADMIN_PASSWORD if you use this
#    valueFrom:
#      secretKeyRef:
#        name: kdiff-initial-admin-secret
#        key: password

custom_command: []
#  - "/bin/bash"
#  - "-c"
#  - "echo 'Custom command executed'"

extraObjects: []
#  - apiVersion: v1
#    kind: Secret
#    metadata:
#      name: extra-secret
#    type: Opaque
#    stringData:
#      AAA: BBB